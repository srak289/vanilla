#!/bin/bash

function vanilla::argparse() {
    return 0
}

function vanilla::jsonify() {
    local STR="{"
    local K=${1%=*}
    local V=${1#*=}
    STR="$STR\"$K\": \"$V\""
    shift
    while [ $# -gt 0 ]; do
        K=${1%=*}
        V=${1#*=}
        STR="$STR, \"$K\": \"$V\""
        shift
    done
    STR="$STR}"
    echo $STR
}

function vanilla::regex::nevra() {
    echo "unimplemented"
}

function vanilla::regex::ipv4() {
    echo $(echo ${1} | grep -Po '([0-9]{1,3}\.){3}[0-9]{1,3}')
}

function vanilla::install() {
    declare TARGET="${VANILLA}/install/${1}.sh"
    if [ -f "${TARGET}" ]; then
        bash "${TARGET}"
    else
        echo "No vanilla install for ${1}"
    fi
}

function vanilla::chicken() {
    echo -e "$(curl -sL https://ipchicken.com | vanilla::regex::ipv4 )"
}

function vanilla::ipify() {
    echo -e "$(curl -sL https://api.ipify.org)"
}

function vanilla::newproj() {
    declare -i PIP
    if [ "$1" == "--nopip" ]; then
        PIP=0
        shift
    fi
    if [ ! -d $1 ]; then
        mkdir $1
    fi
    cd $1
    git init
    if [ $PIP -eq 1 ]; then
        python3 -m venv --prompt $1 .env
    fi
}

function vanilla::setup_agent() {
    if [ -S "/run/user/${UID}/keyring/ssh" ]; then
        # ubuntu
        export SSH_AUTH_SOCK="/run/user/${UID}/keyring/ssh"
    fi
    if [ -S "/run/user/${UID}/openssh_agent" ]; then
        # debian
        export SSH_AUTH_SOCK="/run/user/${UID}/openssh_agent"
    fi
}

function vanilla::source() {
    source "${HOME}/.bashrc"
}

function vanilla::find() {
    declare TYPE=""
    declare I=""
    if [ "$1" == "-d" ]; then
        TYPE="d"
        shift
    else
        TYPE="f"
    fi
    if [ "$1" == "-i" ]; then
        declare I="i"
        shift
    fi
    find . -${I}name \*$1\* -type ${TYPE}
}

function vanilla::tree() {
    function leaf() {
        echo "leaf"
    }
    CHARS=("│" "├" "└" "─")
    echo "tree"
}
